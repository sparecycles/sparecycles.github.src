- uses :dialog
- uses :ajax
- uses :flickr
- uses :message
- uses :image_loader   

.main-content
  .template

- content_for :template do
  .empty

- content_for :script do
  :plain
    $('#template .empty').defineTemplate('empty', {});
    var main_content = new Template.ViewModel({template:'empty'});
    $('.main-content .template').template(main_content, {
      '.': {
        $template: '.template',
        $in: '.data'
      }
    });

    function SetMainContent(template, data) {
      main_content.locked(function() {
        this.data('template', template);
        this.data('data', data);
      });
    }


- content_for :template do
  .flickr-photos
    .photos
      %img.photo

- content_for :script do
  :plain
    $('#template .flickr-photos').defineTemplate('flickr-photos', {
      '.photo' : { $each: { photo: '.photos.photo' },
        '@src' : 'photo.url_m'
      }
    });

- content_for :title do
  Story

- content_for :script do
  :plain 
    var DialogStory = new Story(Story.Dialog('basic-dialog', {
      content: 'This is a test dialog',
      title: 'Testing... 1. 2. 3.'
    }, [
      { label: 'login', action: [ '@flickr',
        [
          {
            setup: function() {
              this.popup = this.scope.popup = window.open('/popup', 'authenticate', _.join({
                width: 800,
                height: 800,
                screenX: 200,
                screenY: 200,
                toolbar: 'no',
                location: 'no',
                status: 'no',
                copyhistory: 'no',
                scrollbars: 'yes'
              }, ['=',',']));
              this.popup.onclose = function() { alert('BANG!'); };
            },
            teardown: function() {
              if(!this.popup.closed) this.popup.close();
            }
          },
          [
            Story.Flickr('flickr.auth.getFrob', {
            }, { timeout: 5000 }),
            Story.Switch({
              success: [
                Story.Live(500, Story.Message(
                  'Close the Flickr Auth Popup to Continue'
                ), { 
                  setup: function() {
                    var url = 'http://flickr.com/services/auth';
                    var params = { 
                      api_key: Flickr.api_key,
                      perms: 'read',
                      frob: this.scope.data.frob._content
                    };
                    this.scope.popup.location = url + '?' + Flickr.Sign(params)
                  }, 
                  update: function() {
                    return !this.scope.popup.closed;
                  } 
                }),
                Story.Flickr('flickr.auth.getToken', function() {
                  return {frob: this.scope.data.frob._content}
                }),
                function() {
                  this.scope.api_key = this.scope.data.auth.token._content; 
                  this.scope.user = this.scope.data.auth.user;
                },
                [Story.Flickr('flickr.photos.search', function() {
                  return {
                    api_key: this.scope.api_key, 
                    user_id: this.scope.user.nsid,
                    extras: 'url_m',
                    safe_search: 1
                  };
                }), Story.Message(function() { 
                  return 'Loading Photos for ' + this.scope.user.fullname + '...';
                })],
                function() {
                  this.scope.dialog.data('photos', 
                    this.scope.data.photos
                  );
                  this.scope.dialog.data('type', 'flickr-photos');
                  this.scope.dialog.data('dialog.buttons', [{
                    label: 'close',
                    action: function() { this.scope.dialog.close(); }
                  }]); 
                }
              ],
              '*': [
                Story.Message("Error!"),
                Story.Delay(3000)
              ]
            })
          ]
        ]
      ]}
    ]));
    var canvas_model = new Template.ViewModel({width: 400, height: 300});
    $('<div/>').appendTo('body').template(canvas_model, {
      '.' : { $template: '=image-loader' }
    });
    $('<button>dialog</button>')
    .click(function() {
      DialogStory.tell();
    })
    .appendTo($('body'));
-# vim: set sw=2 ts=2 expandtab :
