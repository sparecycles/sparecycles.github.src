-# vim: set sw=2 ts=2 expandtab :
- content_for :template do
  .progress-bar-template
    .progress-bar
      .title
      .bar
        .full
      %button.cancel Cancel

- content_for :style do
  :plain
    .progress-bar .bar {
      padding: 5px;
    }
    .progress-bar .full {
      background-color: black;
      height: 40px;
      border-radius: 6px;
    }
    .progress-bar {
      width: 500px;
      height: 200px;
      margin: 200px auto;
      background: white;
      border: 2px solid gray;
      border-radius: 3px 5px;
      color: black;
    }

- content_for :script do
  :plain
    $('#template .progress-bar-template').defineTemplate('progress-bar', {
      $template: '=screen',
      '.progress-bar' : { $as: 'screen-content',
        '.cancel@onclick' : '.cancel',
        '.title' : '.title',
        '.full@style': { width: function() {
          // FIXME: ()() is awkward
          var result = Template.coalesce('.percent', '=100')()();
          return result + '%';
        } }
      }
    });
    ProgressBar = _layer.Class(function(title) {
      var self = this;
      var model = new Template.ViewModel({
        title: title,
        percent: 0,
        cancel: function() { self.close(); }
      });
      this.data = model.data;
      this.progress = $("<div/>").appendTo($('body')).template(model, {
        '.' : {
          $template: '=progress-bar'
        }
      });
    }, { 
      proto: {
        is_open: function() {
          return this.hasOwnProperty('progress');
        },
        close: function() {
          if(this.hasOwnProperty('progress')) {
            this.progress.clearTemplate().remove();
            delete this.progress;
          }
          delete this.data;
        }
      }
    })
